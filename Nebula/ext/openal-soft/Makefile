# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
DEFINES += -DAL_LIBTYPE_STATIC
INCLUDES += -Isrc -Isrc/alc -Isrc/common -Iinclude -Iinclude/AL
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = bin/Debug/linuxx86_64/OpenAL-Soft
TARGET = $(TARGETDIR)/libOpenAL-Soft.a
OBJDIR = bin-int/Debug/linuxx86_64/OpenAL-Soft
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++14
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = bin/Release/linuxx86_64/OpenAL-Soft
TARGET = $(TARGETDIR)/libOpenAL-Soft.a
OBJDIR = bin-int/Release/linuxx86_64/OpenAL-Soft
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++14
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/alc.o
GENERATED += $(OBJDIR)/alcomplex.o
GENERATED += $(OBJDIR)/alconfig.o
GENERATED += $(OBJDIR)/alexcpt.o
GENERATED += $(OBJDIR)/alfstream.o
GENERATED += $(OBJDIR)/almalloc.o
GENERATED += $(OBJDIR)/alstring.o
GENERATED += $(OBJDIR)/alu.o
GENERATED += $(OBJDIR)/ambdec.o
GENERATED += $(OBJDIR)/autowah.o
GENERATED += $(OBJDIR)/auxeffectslot.o
GENERATED += $(OBJDIR)/base.o
GENERATED += $(OBJDIR)/bformatdec.o
GENERATED += $(OBJDIR)/biquad.o
GENERATED += $(OBJDIR)/bs2b.o
GENERATED += $(OBJDIR)/bsinc_tables.o
GENERATED += $(OBJDIR)/buffer.o
GENERATED += $(OBJDIR)/chorus.o
GENERATED += $(OBJDIR)/compressor.o
GENERATED += $(OBJDIR)/converter.o
GENERATED += $(OBJDIR)/cpu_caps.o
GENERATED += $(OBJDIR)/dedicated.o
GENERATED += $(OBJDIR)/distortion.o
GENERATED += $(OBJDIR)/dsound.o
GENERATED += $(OBJDIR)/dynload.o
GENERATED += $(OBJDIR)/echo.o
GENERATED += $(OBJDIR)/effect.o
GENERATED += $(OBJDIR)/equalizer.o
GENERATED += $(OBJDIR)/error.o
GENERATED += $(OBJDIR)/event.o
GENERATED += $(OBJDIR)/extension.o
GENERATED += $(OBJDIR)/filter.o
GENERATED += $(OBJDIR)/fpu_ctrl.o
GENERATED += $(OBJDIR)/fshifter.o
GENERATED += $(OBJDIR)/helpers.o
GENERATED += $(OBJDIR)/hrtf.o
GENERATED += $(OBJDIR)/listener.o
GENERATED += $(OBJDIR)/loopback.o
GENERATED += $(OBJDIR)/mastering.o
GENERATED += $(OBJDIR)/mixer_c.o
GENERATED += $(OBJDIR)/mixer_sse.o
GENERATED += $(OBJDIR)/mixer_sse2.o
GENERATED += $(OBJDIR)/mixer_sse3.o
GENERATED += $(OBJDIR)/mixer_sse41.o
GENERATED += $(OBJDIR)/modulator.o
GENERATED += $(OBJDIR)/nfc.o
GENERATED += $(OBJDIR)/null.o
GENERATED += $(OBJDIR)/null1.o
GENERATED += $(OBJDIR)/panning.o
GENERATED += $(OBJDIR)/polyphase_resampler.o
GENERATED += $(OBJDIR)/pshifter.o
GENERATED += $(OBJDIR)/reverb.o
GENERATED += $(OBJDIR)/ringbuffer.o
GENERATED += $(OBJDIR)/source.o
GENERATED += $(OBJDIR)/splitter.o
GENERATED += $(OBJDIR)/state.o
GENERATED += $(OBJDIR)/strutils.o
GENERATED += $(OBJDIR)/threads.o
GENERATED += $(OBJDIR)/uhjfilter.o
GENERATED += $(OBJDIR)/uiddefs.o
GENERATED += $(OBJDIR)/vmorpher.o
GENERATED += $(OBJDIR)/voice.o
GENERATED += $(OBJDIR)/wasapi.o
GENERATED += $(OBJDIR)/wave.o
GENERATED += $(OBJDIR)/winmm.o
OBJECTS += $(OBJDIR)/alc.o
OBJECTS += $(OBJDIR)/alcomplex.o
OBJECTS += $(OBJDIR)/alconfig.o
OBJECTS += $(OBJDIR)/alexcpt.o
OBJECTS += $(OBJDIR)/alfstream.o
OBJECTS += $(OBJDIR)/almalloc.o
OBJECTS += $(OBJDIR)/alstring.o
OBJECTS += $(OBJDIR)/alu.o
OBJECTS += $(OBJDIR)/ambdec.o
OBJECTS += $(OBJDIR)/autowah.o
OBJECTS += $(OBJDIR)/auxeffectslot.o
OBJECTS += $(OBJDIR)/base.o
OBJECTS += $(OBJDIR)/bformatdec.o
OBJECTS += $(OBJDIR)/biquad.o
OBJECTS += $(OBJDIR)/bs2b.o
OBJECTS += $(OBJDIR)/bsinc_tables.o
OBJECTS += $(OBJDIR)/buffer.o
OBJECTS += $(OBJDIR)/chorus.o
OBJECTS += $(OBJDIR)/compressor.o
OBJECTS += $(OBJDIR)/converter.o
OBJECTS += $(OBJDIR)/cpu_caps.o
OBJECTS += $(OBJDIR)/dedicated.o
OBJECTS += $(OBJDIR)/distortion.o
OBJECTS += $(OBJDIR)/dsound.o
OBJECTS += $(OBJDIR)/dynload.o
OBJECTS += $(OBJDIR)/echo.o
OBJECTS += $(OBJDIR)/effect.o
OBJECTS += $(OBJDIR)/equalizer.o
OBJECTS += $(OBJDIR)/error.o
OBJECTS += $(OBJDIR)/event.o
OBJECTS += $(OBJDIR)/extension.o
OBJECTS += $(OBJDIR)/filter.o
OBJECTS += $(OBJDIR)/fpu_ctrl.o
OBJECTS += $(OBJDIR)/fshifter.o
OBJECTS += $(OBJDIR)/helpers.o
OBJECTS += $(OBJDIR)/hrtf.o
OBJECTS += $(OBJDIR)/listener.o
OBJECTS += $(OBJDIR)/loopback.o
OBJECTS += $(OBJDIR)/mastering.o
OBJECTS += $(OBJDIR)/mixer_c.o
OBJECTS += $(OBJDIR)/mixer_sse.o
OBJECTS += $(OBJDIR)/mixer_sse2.o
OBJECTS += $(OBJDIR)/mixer_sse3.o
OBJECTS += $(OBJDIR)/mixer_sse41.o
OBJECTS += $(OBJDIR)/modulator.o
OBJECTS += $(OBJDIR)/nfc.o
OBJECTS += $(OBJDIR)/null.o
OBJECTS += $(OBJDIR)/null1.o
OBJECTS += $(OBJDIR)/panning.o
OBJECTS += $(OBJDIR)/polyphase_resampler.o
OBJECTS += $(OBJDIR)/pshifter.o
OBJECTS += $(OBJDIR)/reverb.o
OBJECTS += $(OBJDIR)/ringbuffer.o
OBJECTS += $(OBJDIR)/source.o
OBJECTS += $(OBJDIR)/splitter.o
OBJECTS += $(OBJDIR)/state.o
OBJECTS += $(OBJDIR)/strutils.o
OBJECTS += $(OBJDIR)/threads.o
OBJECTS += $(OBJDIR)/uhjfilter.o
OBJECTS += $(OBJDIR)/uiddefs.o
OBJECTS += $(OBJDIR)/vmorpher.o
OBJECTS += $(OBJDIR)/voice.o
OBJECTS += $(OBJDIR)/wasapi.o
OBJECTS += $(OBJDIR)/wave.o
OBJECTS += $(OBJDIR)/winmm.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking OpenAL-Soft
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning OpenAL-Soft
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/auxeffectslot.o: src/al/auxeffectslot.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/buffer.o: src/al/buffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/effect.o: src/al/effect.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/error.o: src/al/error.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/event.o: src/al/event.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/extension.o: src/al/extension.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/filter.o: src/al/filter.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/listener.o: src/al/listener.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/source.o: src/al/source.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/state.o: src/al/state.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/alc.o: src/alc/alc.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/alconfig.o: src/alc/alconfig.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/alu.o: src/alc/alu.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ambdec.o: src/alc/ambdec.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/base.o: src/alc/backends/base.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dsound.o: src/alc/backends/dsound.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/loopback.o: src/alc/backends/loopback.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/null.o: src/alc/backends/null.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/wasapi.o: src/alc/backends/wasapi.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/wave.o: src/alc/backends/wave.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/winmm.o: src/alc/backends/winmm.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/bformatdec.o: src/alc/bformatdec.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/bs2b.o: src/alc/bs2b.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/converter.o: src/alc/converter.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cpu_caps.o: src/alc/cpu_caps.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/autowah.o: src/alc/effects/autowah.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/chorus.o: src/alc/effects/chorus.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/compressor.o: src/alc/effects/compressor.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dedicated.o: src/alc/effects/dedicated.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/distortion.o: src/alc/effects/distortion.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/echo.o: src/alc/effects/echo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/equalizer.o: src/alc/effects/equalizer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fshifter.o: src/alc/effects/fshifter.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/modulator.o: src/alc/effects/modulator.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/null1.o: src/alc/effects/null.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pshifter.o: src/alc/effects/pshifter.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/reverb.o: src/alc/effects/reverb.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vmorpher.o: src/alc/effects/vmorpher.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/biquad.o: src/alc/filters/biquad.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/nfc.o: src/alc/filters/nfc.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/splitter.o: src/alc/filters/splitter.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fpu_ctrl.o: src/alc/fpu_ctrl.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/helpers.o: src/alc/helpers.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hrtf.o: src/alc/hrtf.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mastering.o: src/alc/mastering.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mixer_c.o: src/alc/mixer/mixer_c.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mixer_sse.o: src/alc/mixer/mixer_sse.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mixer_sse2.o: src/alc/mixer/mixer_sse2.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mixer_sse3.o: src/alc/mixer/mixer_sse3.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mixer_sse41.o: src/alc/mixer/mixer_sse41.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/panning.o: src/alc/panning.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ringbuffer.o: src/alc/ringbuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/uhjfilter.o: src/alc/uhjfilter.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/uiddefs.o: src/alc/uiddefs.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/voice.o: src/alc/voice.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/alcomplex.o: src/common/alcomplex.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/alexcpt.o: src/common/alexcpt.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/alfstream.o: src/common/alfstream.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/almalloc.o: src/common/almalloc.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/alstring.o: src/common/alstring.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/bsinc_tables.o: src/common/bsinc_tables.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dynload.o: src/common/dynload.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/polyphase_resampler.o: src/common/polyphase_resampler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/strutils.o: src/common/strutils.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/threads.o: src/common/threads.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif