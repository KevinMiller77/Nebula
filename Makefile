# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  glfw_config = debug
  glad_config = debug
  imgui_config = debug
  yaml_cpp_config = debug
  nfd_config = debug
  libogg_config = debug
  Vorbis_config = debug
  OpenAL_Soft_config = debug
  imguizmo_config = debug
  NebulaEngine_config = debug
  SpaceSim_config = debug
  NebulaStudio_config = debug

else ifeq ($(config),release)
  glfw_config = release
  glad_config = release
  imgui_config = release
  yaml_cpp_config = release
  nfd_config = release
  libogg_config = release
  Vorbis_config = release
  OpenAL_Soft_config = release
  imguizmo_config = release
  NebulaEngine_config = release
  SpaceSim_config = release
  NebulaStudio_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := glfw glad imgui yaml-cpp nfd libogg Vorbis OpenAL-Soft imguizmo NebulaEngine SpaceSim NebulaStudio

.PHONY: all clean help $(PROJECTS) Dependencies

all: $(PROJECTS)

Dependencies: OpenAL-Soft Vorbis glad glfw imgui imguizmo libogg nfd yaml-cpp

glfw:
ifneq (,$(glfw_config))
	@echo "==== Building glfw ($(glfw_config)) ===="
	@${MAKE} --no-print-directory -C Nebula/ext/glfw -f Makefile config=$(glfw_config)
endif

glad:
ifneq (,$(glad_config))
	@echo "==== Building glad ($(glad_config)) ===="
	@${MAKE} --no-print-directory -C Nebula/ext/glad -f Makefile config=$(glad_config)
endif

imgui:
ifneq (,$(imgui_config))
	@echo "==== Building imgui ($(imgui_config)) ===="
	@${MAKE} --no-print-directory -C Nebula/ext/imgui -f Makefile config=$(imgui_config)
endif

yaml-cpp:
ifneq (,$(yaml_cpp_config))
	@echo "==== Building yaml-cpp ($(yaml_cpp_config)) ===="
	@${MAKE} --no-print-directory -C Nebula/ext/yaml-cpp -f Makefile config=$(yaml_cpp_config)
endif

nfd:
ifneq (,$(nfd_config))
	@echo "==== Building nfd ($(nfd_config)) ===="
	@${MAKE} --no-print-directory -C Nebula/ext/nativefiledialog -f Makefile config=$(nfd_config)
endif

libogg:
ifneq (,$(libogg_config))
	@echo "==== Building libogg ($(libogg_config)) ===="
	@${MAKE} --no-print-directory -C Nebula/ext/libogg -f Makefile config=$(libogg_config)
endif

Vorbis: libogg
ifneq (,$(Vorbis_config))
	@echo "==== Building Vorbis ($(Vorbis_config)) ===="
	@${MAKE} --no-print-directory -C Nebula/ext/Vorbis -f Makefile config=$(Vorbis_config)
endif

OpenAL-Soft:
ifneq (,$(OpenAL_Soft_config))
	@echo "==== Building OpenAL-Soft ($(OpenAL_Soft_config)) ===="
	@${MAKE} --no-print-directory -C Nebula/ext/OpenAL-Soft -f Makefile config=$(OpenAL_Soft_config)
endif

imguizmo:
ifneq (,$(imguizmo_config))
	@echo "==== Building imguizmo ($(imguizmo_config)) ===="
	@${MAKE} --no-print-directory -C Nebula/ext/imguizmo -f Makefile config=$(imguizmo_config)
endif

NebulaEngine: imgui imguizmo glad glfw yaml-cpp nfd OpenAL-Soft Vorbis
ifneq (,$(NebulaEngine_config))
	@echo "==== Building NebulaEngine ($(NebulaEngine_config)) ===="
	@${MAKE} --no-print-directory -C build -f NebulaEngine.make config=$(NebulaEngine_config)
endif

SpaceSim: NebulaEngine imgui glad glfw yaml-cpp nfd
ifneq (,$(SpaceSim_config))
	@echo "==== Building SpaceSim ($(SpaceSim_config)) ===="
	@${MAKE} --no-print-directory -C build -f SpaceSim.make config=$(SpaceSim_config)
endif

NebulaStudio: NebulaEngine imgui glad glfw yaml-cpp nfd
ifneq (,$(NebulaStudio_config))
	@echo "==== Building NebulaStudio ($(NebulaStudio_config)) ===="
	@${MAKE} --no-print-directory -C build -f NebulaStudio.make config=$(NebulaStudio_config)
endif

clean:
	@${MAKE} --no-print-directory -C Nebula/ext/glfw -f Makefile clean
	@${MAKE} --no-print-directory -C Nebula/ext/glad -f Makefile clean
	@${MAKE} --no-print-directory -C Nebula/ext/imgui -f Makefile clean
	@${MAKE} --no-print-directory -C Nebula/ext/yaml-cpp -f Makefile clean
	@${MAKE} --no-print-directory -C Nebula/ext/nativefiledialog -f Makefile clean
	@${MAKE} --no-print-directory -C Nebula/ext/libogg -f Makefile clean
	@${MAKE} --no-print-directory -C Nebula/ext/Vorbis -f Makefile clean
	@${MAKE} --no-print-directory -C Nebula/ext/OpenAL-Soft -f Makefile clean
	@${MAKE} --no-print-directory -C Nebula/ext/imguizmo -f Makefile clean
	@${MAKE} --no-print-directory -C build -f NebulaEngine.make clean
	@${MAKE} --no-print-directory -C build -f SpaceSim.make clean
	@${MAKE} --no-print-directory -C build -f NebulaStudio.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   glfw"
	@echo "   glad"
	@echo "   imgui"
	@echo "   yaml-cpp"
	@echo "   nfd"
	@echo "   libogg"
	@echo "   Vorbis"
	@echo "   OpenAL-Soft"
	@echo "   imguizmo"
	@echo "   NebulaEngine"
	@echo "   SpaceSim"
	@echo "   NebulaStudio"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"